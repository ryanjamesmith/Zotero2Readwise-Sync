      - name: Sync Zotero â†’ Readwise (use @citationkey as title)
        env:
          READWISE_TOKEN: ${{ secrets.READWISE_TOKEN }}
          ZOTERO_KEY: ${{ secrets.ZOTERO_KEY }}
          ZOTERO_ID: ${{ secrets.ZOTERO_ID }}
        run: |
          python - <<'PY'
          import os, re
          from zotero2readwise.zt2rw import Zotero2Readwise

          z = Zotero2Readwise(
              readwise_token=os.environ["READWISE_TOKEN"],
              zotero_key=os.environ["ZOTERO_KEY"],
              zotero_library_id=os.environ["ZOTERO_ID"],
              zotero_library_type="user",
              include_annotations=True,
              include_notes=True,
          )

          # Save original method that run() uses internally
          _orig_get_all = z.get_all_zotero_items

          def _patched_get_all():
              items = _orig_get_all()
              changed = 0
              for it in items:
                  d = it.get("data", {})
                  extra = (d.get("extra") or "")
                  # Robustly match "Citation Key: KEY" (case/space tolerant)
                  m = re.search(r"(?i)Citation\s*Key\s*:\s*(\S+)", extra)
                  if m:
                      key = m.group(1).strip()
                      if key:
                          d["title"] = f"@{key}"
                          changed += 1
              print(f"   â€¢ Titles changed to @citationkey on {changed} items")
              return items

          # Monkey-patch and run the standard pipeline
          z.get_all_zotero_items = _patched_get_all
          print("ðŸ”§ Patched get_all_zotero_items() â€” starting syncâ€¦")
          z.run()
          print("âœ… Done. (@citationkey titles applied where available)")
          PY
