name: Zotero to Readwise Automation

on:
  workflow_dispatch:
  schedule:
    - cron: "0 11 * * *"  # 04:00 Vancouver (11:00 UTC)

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install zotero2readwise
        run: |
          python -m pip install --upgrade pip
          pip install zotero2readwise

      - name: Sync Zotero -> Readwise (use @citationkey as title)
        env:
          READWISE_TOKEN: ${{ secrets.READWISE_TOKEN }}
          ZOTERO_KEY: ${{ secrets.ZOTERO_KEY }}
          ZOTERO_ID: ${{ secrets.ZOTERO_ID }}
        run: |
          python - <<'PY'
          import os, re
          from zotero2readwise.zt2rw import Zotero2Readwise

          z = Zotero2Readwise(
              readwise_token=os.environ["READWISE_TOKEN"],
              zotero_key=os.environ["ZOTERO_KEY"],
              zotero_library_id=os.environ["ZOTERO_ID"],
              zotero_library_type="user",
              include_annotations=True,
              include_notes=True,
          )

          # Patch the method run() uses so we can rewrite titles safely across versions.
          original_get_all = z.get_all_zotero_items

          def patched_get_all():
              items = original_get_all()
              changed = 0
              for it in items:
                  d = it.get("data", {})
                  extra = (d.get("extra") or "")
                  # Match "Citation Key: KEY" with flexible case/spacing
                  m = re.search(r"(?i)Citation\s*Key\s*:\s*([^\s;]+)", extra)
                  if m:
                      key = m.group(1).strip()
                      if key:
                          d["title"] = f"@{key}"
                          changed += 1
              print(f"Titles changed to @citationkey on {changed} items")
              return items

          z.get_all_zotero_items = patched_get_all

          print("Starting sync...")
          z.run()
          print("Done.")
          PY
